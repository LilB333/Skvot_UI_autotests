{"name": "test_add_product_to_cart", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"cart-popup__clean\" href=\"#\">...</a> is not clickable at point (1178, 137). Other element would receive the click: <a class=\"page-head__brand-image\" href=\"/brands/skvot\">...</a>\n  (Session info: chrome=138.0.7204.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\n\tGetHandleVerifier [0x0x9eba83+63395]\n\tGetHandleVerifier [0x0x9ebac4+63460]\n\t(No symbol) [0x0x832113]\n\t(No symbol) [0x0x880ba0]\n\t(No symbol) [0x0x87ef5a]\n\t(No symbol) [0x0x87cab7]\n\t(No symbol) [0x0x87bd6d]\n\t(No symbol) [0x0x870515]\n\t(No symbol) [0x0x89f3ac]\n\t(No symbol) [0x0x86ffa4]\n\t(No symbol) [0x0x89f624]\n\t(No symbol) [0x0x8c07ba]\n\t(No symbol) [0x0x89f1a6]\n\t(No symbol) [0x0x86e7b2]\n\t(No symbol) [0x0x86f654]\n\tGetHandleVerifier [0x0xc68883+2672035]\n\tGetHandleVerifier [0x0xc63cba+2652634]\n\tGetHandleVerifier [0x0xa12bca+223466]\n\tGetHandleVerifier [0x0xa02cb8+158168]\n\tGetHandleVerifier [0x0xa0978d+185517]\n\tGetHandleVerifier [0x0x9f3b78+96408]\n\tGetHandleVerifier [0x0x9f3d02+96802]\n\tGetHandleVerifier [0x0x9de90a+9770]\n\tBaseThreadInitThunk [0x0x7641fcc9+25]\n\tRtlGetAppContainerNamedObjectPath [0x0x772582ae+286]\n\tRtlGetAppContainerNamedObjectPath [0x0x7725827e+238]", "trace": "self = <test_add_product_to_cart.TestAddProductToCart object at 0x000001AE38710410>, set_up = <function set_up.<locals>.setup_browser at 0x000001AE38765800>\n\n        @allure.description(\"Test add product to cart\")\n        def test_add_product_to_cart(self, set_up):\n            driver = set_up(url=url_product_1)\n    \n            cart_title = 'Моя корзина (1)'\n            cart_item = \"\"\"Дека Для Скейта СКВОТ Knight\n    5 900 ₽\n    Удалить\n    Размер: 8.64\"\"\"\n            cart_total_sum = '5 900 ₽'\n    \n            product_page = ProductPage(driver)\n            product_page.close_modal_window()\n            product_page.add_product_to_cart()\n            product_page.check_product_info_from_cart(cart_title, cart_item, cart_total_sum)\n    \n            # Очищаем корзину для следующего теста\n>           product_page.clean_cart()\n\ntests\\ui\\test_add_product_to_cart.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\product_page.py:168: in clean_cart\n    self.click_cart_clean_button()\npages\\product_page.py:109: in click_cart_clean_button\n    self.get_cart_clean_button().click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:120: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:573: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001AE386F9C50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...tRtlGetAppContainerNamedObjectPath [0x0x772582ae+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x0x7725827e+238]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"cart-popup__clean\" href=\"#\">...</a> is not clickable at point (1178, 137). Other element would receive the click: <a class=\"page-head__brand-image\" href=\"/brands/skvot\">...</a>\nE         (Session info: chrome=138.0.7204.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x9eba83+63395]\nE       \tGetHandleVerifier [0x0x9ebac4+63460]\nE       \t(No symbol) [0x0x832113]\nE       \t(No symbol) [0x0x880ba0]\nE       \t(No symbol) [0x0x87ef5a]\nE       \t(No symbol) [0x0x87cab7]\nE       \t(No symbol) [0x0x87bd6d]\nE       \t(No symbol) [0x0x870515]\nE       \t(No symbol) [0x0x89f3ac]\nE       \t(No symbol) [0x0x86ffa4]\nE       \t(No symbol) [0x0x89f624]\nE       \t(No symbol) [0x0x8c07ba]\nE       \t(No symbol) [0x0x89f1a6]\nE       \t(No symbol) [0x0x86e7b2]\nE       \t(No symbol) [0x0x86f654]\nE       \tGetHandleVerifier [0x0xc68883+2672035]\nE       \tGetHandleVerifier [0x0xc63cba+2652634]\nE       \tGetHandleVerifier [0x0xa12bca+223466]\nE       \tGetHandleVerifier [0x0xa02cb8+158168]\nE       \tGetHandleVerifier [0x0xa0978d+185517]\nE       \tGetHandleVerifier [0x0x9f3b78+96408]\nE       \tGetHandleVerifier [0x0x9f3d02+96802]\nE       \tGetHandleVerifier [0x0x9de90a+9770]\nE       \tBaseThreadInitThunk [0x0x7641fcc9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x772582ae+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x7725827e+238]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException"}, "description": "Test add product to cart", "steps": [{"name": "Click modal window close button", "status": "passed", "start": 1755855018830, "stop": 1755855019067}, {"name": "Add product to cart", "status": "passed", "start": 1755855019067, "stop": 1755855020193}, {"name": "Check product info from cart", "status": "passed", "start": 1755855020193, "stop": 1755855020677}, {"name": "Clean cart", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"cart-popup__clean\" href=\"#\">...</a> is not clickable at point (1178, 137). Other element would receive the click: <a class=\"page-head__brand-image\" href=\"/brands/skvot\">...</a>\n  (Session info: chrome=138.0.7204.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\n\tGetHandleVerifier [0x0x9eba83+63395]\n\tGetHandleVerifier [0x0x9ebac4+63460]\n\t(No symbol) [0x0x832113]\n\t(No symbol) [0x0x880ba0]\n\t(No symbol) [0x0x87ef5a]\n\t(No symbol) [0x0x87cab7]\n\t(No symbol) [0x0x87bd6d]\n\t(No symbol) [0x0x870515]\n\t(No symbol) [0x0x89f3ac]\n\t(No symbol) [0x0x86ffa4]\n\t(No symbol) [0x0x89f624]\n\t(No symbol) [0x0x8c07ba]\n\t(No symbol) [0x0x89f1a6]\n\t(No symbol) [0x0x86e7b2]\n\t(No symbol) [0x0x86f654]\n\tGetHandleVerifier [0x0xc68883+2672035]\n\tGetHandleVerifier [0x0xc63cba+2652634]\n\tGetHandleVerifier [0x0xa12bca+223466]\n\tGetHandleVerifier [0x0xa02cb8+158168]\n\tGetHandleVerifier [0x0xa0978d+185517]\n\tGetHandleVerifier [0x0x9f3b78+96408]\n\tGetHandleVerifier [0x0x9f3d02+96802]\n\tGetHandleVerifier [0x0x9de90a+9770]\n\tBaseThreadInitThunk [0x0x7641fcc9+25]\n\tRtlGetAppContainerNamedObjectPath [0x0x772582ae+286]\n\tRtlGetAppContainerNamedObjectPath [0x0x7725827e+238]\n\n", "trace": "  File \"C:\\Users\\user\\PycharmProjects\\Selenium_Skvot_UI_Autotests\\pages\\product_page.py\", line 168, in clean_cart\n    self.click_cart_clean_button()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\user\\PycharmProjects\\Selenium_Skvot_UI_Autotests\\pages\\product_page.py\", line 109, in click_cart_clean_button\n    self.get_cart_clean_button().click()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\user\\PycharmProjects\\Selenium_Skvot_UI_Autotests\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 120, in click\n    self._execute(Command.CLICK_ELEMENT)\n    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\user\\PycharmProjects\\Selenium_Skvot_UI_Autotests\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 573, in _execute\n    return self._parent.execute(command, params)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\user\\PycharmProjects\\Selenium_Skvot_UI_Autotests\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 454, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\user\\PycharmProjects\\Selenium_Skvot_UI_Autotests\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1755855020677, "stop": 1755855022050}], "attachments": [{"name": "stdout", "source": "50504554-48c3-4388-a7f1-d8707bd3dc12-attachment.txt", "type": "text/plain"}], "start": 1755855015480, "stop": 1755855022093, "uuid": "b7025450-07f1-483d-ba42-17b6766a3d38", "historyId": "1217be30f27b0869c302f53256f1fdd3", "testCaseId": "1217be30f27b0869c302f53256f1fdd3", "fullName": "tests.ui.test_add_product_to_cart.TestAddProductToCart#test_add_product_to_cart", "labels": [{"name": "parentSuite", "value": "tests.ui"}, {"name": "suite", "value": "test_add_product_to_cart"}, {"name": "subSuite", "value": "TestAddProductToCart"}, {"name": "host", "value": "WIN-3JK580LDE7T"}, {"name": "thread", "value": "30440-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ui.test_add_product_to_cart"}], "titlePath": ["tests", "ui", "test_add_product_to_cart.py", "TestAddProductToCart"]}