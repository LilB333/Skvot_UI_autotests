{"name": "test_buy_product_2", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"button button--bs-2\" href=\"/cart/ordering\">...</a> is not clickable at point (331, 761). Other element would receive the click: <jdiv class=\"cssLeaf__jzfiR\" style=\"background-image: url(&quot;data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2232%22%20height%3D%2240%22%20viewBox%3D%220%200%2032%2040%22%3E%0A%20%20%20%20%3Cg%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%0A%20%20%20%20%20%20%20%20%3Cpath%20fill%3D%22%23424867%22%20d%3D%22M0%200h9.02L32%2033.196V40H0z%22%2F%3E%0A%20%20%20%20%20%20%20%20%3Cpath%20fill%3D%22%23424867%22%20d%3D%22M9%200c3.581.05%2023%205.426%2023%2033.08v.03C18.922%2030.751%209%2019.311%209%205.554V0z%22%20fill-opacity%3D%221%22%2F%3E%0A%20%20%20%20%20%20%20%20%3Cpath%20fill%3D%22%235e5f61%22%20d%3D%22M9%200c3.581.05%2023%205.426%2023%2033.08v.03C18.922%2030.751%209%2019.311%209%205.554V0z%22%20fill-opacity%3D%220.7%22%2F%3E%0A%20%20%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E%0A&quot;);\"></jdiv>\n  (Session info: chrome=138.0.7204.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7bd776f65+76917]\n\tGetHandleVerifier [0x0x7ff7bd776fc0+77008]\n\t(No symbol) [0x0x7ff7bd529dea]\n\t(No symbol) [0x0x7ff7bd588269]\n\t(No symbol) [0x0x7ff7bd585c02]\n\t(No symbol) [0x0x7ff7bd582c41]\n\t(No symbol) [0x0x7ff7bd581b31]\n\t(No symbol) [0x0x7ff7bd573368]\n\t(No symbol) [0x0x7ff7bd5a846a]\n\t(No symbol) [0x0x7ff7bd572c16]\n\t(No symbol) [0x0x7ff7bd5a8680]\n\t(No symbol) [0x0x7ff7bd5d065c]\n\t(No symbol) [0x0x7ff7bd5a8243]\n\t(No symbol) [0x0x7ff7bd571431]\n\t(No symbol) [0x0x7ff7bd5721c3]\n\tGetHandleVerifier [0x0x7ff7bda4d29d+3051437]\n\tGetHandleVerifier [0x0x7ff7bda478f3+3028483]\n\tGetHandleVerifier [0x0x7ff7bda6588d+3151261]\n\tGetHandleVerifier [0x0x7ff7bd79182e+185662]\n\tGetHandleVerifier [0x0x7ff7bd7996ef+218111]\n\tGetHandleVerifier [0x0x7ff7bd77fae4+112628]\n\tGetHandleVerifier [0x0x7ff7bd77fc99+113065]\n\tGetHandleVerifier [0x0x7ff7bd766c68+10616]\n\tBaseThreadInitThunk [0x0x7ffdce097374+20]\n\tRtlUserThreadStart [0x0x7ffdcf41cc91+33]", "trace": "def test_buy_product_2():\n        chrome_options = Options()\n        chrome_options.add_experimental_option('excludeSwitches', ['enable-logging'])\n        chrome_options.add_experimental_option('detach', True)\n        service = Service(\n            executable_path='C:\\\\Users\\\\user\\\\Downloads\\\\data for work\\\\pycharm_projects\\\\ProjectsPy\\\\resource\\\\chromedriver.exe')\n        driver = webdriver.Chrome(service=service, options=chrome_options)\n        driver.maximize_window()\n    \n        print(\"### start test // buy shirt ###\")\n        url = 'https://www.skvot.com/'\n        driver.get(url)\n    \n        main = MainPage(driver)\n        main.add_product_2_to_cart()\n    \n        cart = CartPage(driver)\n>       cart.buy_product()\n\ntest_buy_product.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\pages\\cart_page.py:154: in buy_product\n    self.click_place_order_button()\n..\\..\\pages\\cart_page.py:105: in click_place_order_button\n    self.get_place_order_button().click()\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:120: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:573: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001E57FDFD310>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...ff7bd766c68+10616]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffdce097374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ffdcf41cc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"button button--bs-2\" href=\"/cart/ordering\">...</a> is not clickable at point (331, 761). Other element would receive the click: <jdiv class=\"cssLeaf__jzfiR\" style=\"background-image: url(&quot;data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2232%22%20height%3D%2240%22%20viewBox%3D%220%200%2032%2040%22%3E%0A%20%20%20%20%3Cg%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%0A%20%20%20%20%20%20%20%20%3Cpath%20fill%3D%22%23424867%22%20d%3D%22M0%200h9.02L32%2033.196V40H0z%22%2F%3E%0A%20%20%20%20%20%20%20%20%3Cpath%20fill%3D%22%23424867%22%20d%3D%22M9%200c3.581.05%2023%205.426%2023%2033.08v.03C18.922%2030.751%209%2019.311%209%205.554V0z%22%20fill-opacity%3D%221%22%2F%3E%0A%20%20%20%20%20%20%20%20%3Cpath%20fill%3D%22%235e5f61%22%20d%3D%22M9%200c3.581.05%2023%205.426%2023%2033.08v.03C18.922%2030.751%209%2019.311%209%205.554V0z%22%20fill-opacity%3D%220.7%22%2F%3E%0A%20%20%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E%0A&quot;);\"></jdiv>\nE         (Session info: chrome=138.0.7204.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7bd776f65+76917]\nE       \tGetHandleVerifier [0x0x7ff7bd776fc0+77008]\nE       \t(No symbol) [0x0x7ff7bd529dea]\nE       \t(No symbol) [0x0x7ff7bd588269]\nE       \t(No symbol) [0x0x7ff7bd585c02]\nE       \t(No symbol) [0x0x7ff7bd582c41]\nE       \t(No symbol) [0x0x7ff7bd581b31]\nE       \t(No symbol) [0x0x7ff7bd573368]\nE       \t(No symbol) [0x0x7ff7bd5a846a]\nE       \t(No symbol) [0x0x7ff7bd572c16]\nE       \t(No symbol) [0x0x7ff7bd5a8680]\nE       \t(No symbol) [0x0x7ff7bd5d065c]\nE       \t(No symbol) [0x0x7ff7bd5a8243]\nE       \t(No symbol) [0x0x7ff7bd571431]\nE       \t(No symbol) [0x0x7ff7bd5721c3]\nE       \tGetHandleVerifier [0x0x7ff7bda4d29d+3051437]\nE       \tGetHandleVerifier [0x0x7ff7bda478f3+3028483]\nE       \tGetHandleVerifier [0x0x7ff7bda6588d+3151261]\nE       \tGetHandleVerifier [0x0x7ff7bd79182e+185662]\nE       \tGetHandleVerifier [0x0x7ff7bd7996ef+218111]\nE       \tGetHandleVerifier [0x0x7ff7bd77fae4+112628]\nE       \tGetHandleVerifier [0x0x7ff7bd77fc99+113065]\nE       \tGetHandleVerifier [0x0x7ff7bd766c68+10616]\nE       \tBaseThreadInitThunk [0x0x7ffdce097374+20]\nE       \tRtlUserThreadStart [0x0x7ffdcf41cc91+33]\n\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException"}, "steps": [{"name": "Add product 2 to cart", "status": "passed", "start": 1755015671926, "stop": 1755015686474}, {"name": "Buy product", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"button button--bs-2\" href=\"/cart/ordering\">...</a> is not clickable at point (331, 761). Other element would receive the click: <jdiv class=\"cssLeaf__jzfiR\" style=\"background-image: url(&quot;data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2232%22%20height%3D%2240%22%20viewBox%3D%220%200%2032%2040%22%3E%0A%20%20%20%20%3Cg%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%0A%20%20%20%20%20%20%20%20%3Cpath%20fill%3D%22%23424867%22%20d%3D%22M0%200h9.02L32%2033.196V40H0z%22%2F%3E%0A%20%20%20%20%20%20%20%20%3Cpath%20fill%3D%22%23424867%22%20d%3D%22M9%200c3.581.05%2023%205.426%2023%2033.08v.03C18.922%2030.751%209%2019.311%209%205.554V0z%22%20fill-opacity%3D%221%22%2F%3E%0A%20%20%20%20%20%20%20%20%3Cpath%20fill%3D%22%235e5f61%22%20d%3D%22M9%200c3.581.05%2023%205.426%2023%2033.08v.03C18.922%2030.751%209%2019.311%209%205.554V0z%22%20fill-opacity%3D%220.7%22%2F%3E%0A%20%20%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E%0A&quot;);\"></jdiv>\n  (Session info: chrome=138.0.7204.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7bd776f65+76917]\n\tGetHandleVerifier [0x0x7ff7bd776fc0+77008]\n\t(No symbol) [0x0x7ff7bd529dea]\n\t(No symbol) [0x0x7ff7bd588269]\n\t(No symbol) [0x0x7ff7bd585c02]\n\t(No symbol) [0x0x7ff7bd582c41]\n\t(No symbol) [0x0x7ff7bd581b31]\n\t(No symbol) [0x0x7ff7bd573368]\n\t(No symbol) [0x0x7ff7bd5a846a]\n\t(No symbol) [0x0x7ff7bd572c16]\n\t(No symbol) [0x0x7ff7bd5a8680]\n\t(No symbol) [0x0x7ff7bd5d065c]\n\t(No symbol) [0x0x7ff7bd5a8243]\n\t(No symbol) [0x0x7ff7bd571431]\n\t(No symbol) [0x0x7ff7bd5721c3]\n\tGetHandleVerifier [0x0x7ff7bda4d29d+3051437]\n\tGetHandleVerifier [0x0x7ff7bda478f3+3028483]\n\tGetHandleVerifier [0x0x7ff7bda6588d+3151261]\n\tGetHandleVerifier [0x0x7ff7bd79182e+185662]\n\tGetHandleVerifier [0x0x7ff7bd7996ef+218111]\n\tGetHandleVerifier [0x0x7ff7bd77fae4+112628]\n\tGetHandleVerifier [0x0x7ff7bd77fc99+113065]\n\tGetHandleVerifier [0x0x7ff7bd766c68+10616]\n\tBaseThreadInitThunk [0x0x7ffdce097374+20]\n\tRtlUserThreadStart [0x0x7ffdcf41cc91+33]\n\n", "trace": "  File \"C:\\Users\\user\\PycharmProjects\\Selenium_Skvot_UI_Autotests\\pages\\cart_page.py\", line 154, in buy_product\n    self.click_place_order_button()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\user\\PycharmProjects\\Selenium_Skvot_UI_Autotests\\pages\\cart_page.py\", line 105, in click_place_order_button\n    self.get_place_order_button().click()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\user\\PycharmProjects\\Selenium_Skvot_UI_Autotests\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 120, in click\n    self._execute(Command.CLICK_ELEMENT)\n    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\user\\PycharmProjects\\Selenium_Skvot_UI_Autotests\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 573, in _execute\n    return self._parent.execute(command, params)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\user\\PycharmProjects\\Selenium_Skvot_UI_Autotests\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 454, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\user\\PycharmProjects\\Selenium_Skvot_UI_Autotests\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1755015686474, "stop": 1755015691330}], "attachments": [{"name": "stdout", "source": "d5515bc5-5052-4749-b096-3a2b5899fd1c-attachment.txt", "type": "text/plain"}], "start": 1755015669472, "stop": 1755015691362, "uuid": "2ab71303-4fe0-42c3-bbe1-a1722242e802", "historyId": "7d6494a84d042c6646bc4fd3090973c1", "testCaseId": "7d6494a84d042c6646bc4fd3090973c1", "fullName": "test_buy_product#test_buy_product_2", "labels": [{"name": "suite", "value": "test_buy_product"}, {"name": "host", "value": "WIN-3JK580LDE7T"}, {"name": "thread", "value": "17936-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_buy_product"}], "titlePath": ["test_buy_product.py"]}